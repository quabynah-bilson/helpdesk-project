plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.gms.google-services'
    id 'dagger.hilt.android.plugin'
}


// generate keystore SHA-1: https://stackoverflow.com/questions/27609442/how-to-get-the-sha-1-fingerprint-certificate-in-android-studio-for-debug-mode
// keytool -list -v -keystore project-absolute-path\path-to\key.jks  -alias helpdesk -storepass helpdesk -keypass helpdesk
// 80:A3:60:57:CE:38:01:B3:16:52:15:9C:09:22:EE:3C:6A:B8:D4:DC
android {
    signingConfigs {
        release {
            storeFile file(store_file)
            storePassword password
            keyAlias alias
            keyPassword password
        }
    }
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "io.helpdesk"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
    lintOptions {
        checkReleaseBuilds false
    }
    ndkVersion '23.0.7196353 rc2'
}

kapt {
    correctErrorTypes true
}

dependencies {

    // ref -> https://developer.android.com/topic/libraries/architecture/adding-components

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // firebase
    implementation platform('com.google.firebase:firebase-bom:26.8.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-storage-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'
    implementation 'com.google.firebase:firebase-functions-ktx'

    // google auth
    implementation 'com.google.android.gms:play-services-auth:19.0.0'

    // navigation
    def nav_version = "2.3.5"
    implementation "androidx.navigation:navigation-runtime-ktx:$nav_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // lifecycle
    def lifecycle_version = "2.3.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    // ktx extensions
    implementation "androidx.fragment:fragment-ktx:1.3.5"

    // work manager
    def work_version = "2.6.0-beta01"
    implementation "androidx.work:work-runtime-ktx:$work_version"

    // coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0'

    // room db
    def room_version = "2.3.0"
    implementation("androidx.room:room-runtime:$room_version") {
        exclude group: 'org.antlr', module: 'antlr4-runtime'
    }
    implementation("androidx.room:room-ktx:$room_version") {
        exclude group: 'org.antlr', module: 'antlr4-runtime'
    }
    kapt("androidx.room:room-compiler:$room_version") {
        exclude group: 'org.antlr', module: 'antlr4-runtime'
    }

    // hilt dagger
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation 'androidx.hilt:hilt-work:1.0.0'

    // lottie
    def lottie_version = "3.6.1"
    implementation "com.airbnb.android:lottie:$lottie_version"

    // paging
    def paging_version = "3.1.0-alpha02"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"

    // glide
    implementation "com.github.bumptech.glide:glide:4.12.0"
    kapt "com.github.bumptech.glide:compiler:4.12.0"

    // okhttp
    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.9.0"))
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")
    testImplementation("com.squareup.okhttp3:mockwebserver:4.9.0")

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"

    // gson
    implementation 'com.google.code.gson:gson:2.8.6'

    // mockito
    testImplementation "org.mockito.kotlin:mockito-kotlin:2.2.11"

    // timber -> logging tool
    implementation 'com.jakewharton.timber:timber:4.7.1'
}